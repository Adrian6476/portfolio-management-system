name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  NODE_VERSION: '18'
  GO_VERSION: '1.21'
  PNPM_VERSION: '8'

jobs:
  # Frontend Testing
  frontend-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Install dependencies
        run: |
          cd frontend
          pnpm install --frozen-lockfile

      - name: Type check
        run: |
          cd frontend
          pnpm run type-check

      - name: Lint
        run: |
          cd frontend
          pnpm run lint

      - name: Run tests
        run: |
          cd frontend
          pnpm run test:coverage

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          directory: ./frontend/coverage

  # Backend Testing
  backend-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [api-gateway]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Run tests
        run: |
          if [ -d "services/${{ matrix.service }}" ]; then
            cd services/${{ matrix.service }}
            go mod download
            go test -v -cover ./...
          fi

  # Integration Testing
  integration-test:
    runs-on: ubuntu-latest
    needs: [frontend-test, backend-test]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create .env file for testing
        run: |
          cat > .env << EOF
          POSTGRES_URL=postgres://portfolio_user:portfolio_pass@localhost:5432/portfolio_db?sslmode=disable
          REDIS_URL=localhost:6379
          NATS_URL=nats://localhost:4222
          PORT=8080
          ENVIRONMENT=test
          EOF

      - name: Start services
        run: |
          docker-compose -f docker-compose.test.yml up -d
          sleep 30

      - name: Run integration tests
        run: |
          echo "Integration tests placeholder - implement when services are ready"

      - name: Stop services
        run: |
          docker-compose -f docker-compose.test.yml down

  # Build and Deploy (on main branch)
  deploy:
    runs-on: ubuntu-latest
    needs: [frontend-test, backend-test, integration-test]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build services
        run: |
          docker-compose build

      - name: Deploy to staging
        run: |
          echo "Deploy to staging environment - configure when ready"